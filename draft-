


init something

decide if this is a call or we continue next for a dps

init classname ps

take node
choose init

ps is clas sote scoop
then process with
  [
    match "id":
      UICLAss(xxx anyob as xxx )
      main.xxx ()hsdjkfllds sajdkf
  ]

basic function

create a view with label in in


in swift

let k = uiview(frame: CGRect(x, y, w, h))
root.addsubview(view)


in our language

root.data['main'] = [
  1,
  initCGRect,


]

on action = .
on action
target . expression (parameter) return palce

node_it(run code)
node_it(BLOCK)

BLOCK

END

creteview 0 a b c
  1 initCGRect x y w h p id="djfkald"
  1 initUIView p newview
  1 view addview k

# graphic layer

# high layer
create a view
set height as xxx
set width as xxx

# my layer

CURRENT root


BEGIN
t : init
d : init trigger
s : e0
e0 : create view
END

BEGIN
t : create view
d : create a UIView
s : e0
e0 : e1 e2 e3
e1 : CGRect.init [80 70 60 15] v1
e2 : UIView.init v1 e3
e3 : view.addview e2
END


# data layer
fjakld;f "a as tag inserted into hash table"
Node.data["create view"] = ["0", "id", "id1", "id2"]
Node.data["fjklsa"] = ["method id", "paramet", "returnloction uuid location"]
Node.data["fjklsa"] = ["method id", "paramet", "returnloction uuid location"]
discard[uuid] -> mark as g
"dfjkalsdfj" : "temp" "jkfalsdjflk" "done"

e is a instance of a method -> create from method

# swfit layer
check UIView find check init find eval [init v1 e3] ____ send this to xcode that is [target xxx find afklsdjfk]
target cast as xxx
target.control[jasklfd as xxx, fjaksldfj as fjfjksafjak]
